name: Build and deploy an app to AKS

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  # Local environment variables used later in the workflow
  AZURE_CONTAINER_REGISTRY: 'acseshop3324098376'
  CONTAINER_NAME: 'productservice'
  RESOURCE_GROUP: 'rg-eshop'
  CLUSTER_NAME: 'aks-eshop'
  DEPLOYMENT_MANIFEST_PATH: './product.yml'
  DOCKER_PATH: './DockerfileProducts.acr'

jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials stored in GitHub secrets
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      # Builds and pushes an image up to your Azure Container Registry
      - name: Azure Container Registry login
        run: az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}

      - name: Build Docker image locally
        run: |
          docker build -f ${{ env.DOCKER_PATH }} -t $IMAGE_NAME:latest .

      - name: Tag Docker image
        run: |
          docker tag $IMAGE_NAME:latest $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG

      - name: Push Docker image to ACR
        run: |
          docker push $ACR_LOGIN_SERVER/$IMAGE_NAME:$IMAGE_TAG
  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [buildImage]
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
          pull-images: false
